from event import FillEvent, OrderEvent

import queue

class ExecutionEngine:
    """
    The ExecutionEngine class handles the interaction
    between a set of OrderEvent objects generated by the
    Portfolio Manager and the ultimate set of FillEvent 
    objects that actually occur in the market.

    The handlers can be used to subclass simulated brokerages
    or live brokerages, with identical interfaces. This allows
    strategies to be backtested in a very similar manner to the
    live trading engine.
    """
    def __init__(self):
        """
        Initialises the handler, setting the event queues
        up internally.
        """
        
    def execute_order(self, event: OrderEvent) -> FillEvent:
        """
        Takes an OrderEvent and executes it, producing
        a FillEvent that gets placed onto the Events queue.
        
        Parameters:
        -= event: OrderEvent from the Portfolio Manager to be
                executed on the market
        """
        raise NotImplementedError("execute_order() not implemented")